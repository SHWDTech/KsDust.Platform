@using Dust.Platform.Web.Models.Home
@using Newtonsoft.Json
@model MonitorViewModel
@{
    ViewBag.Title = "监测";
}
@section styles{
    <link href="/Content/zTreeStyle.css" rel="stylesheet">
    <script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=bd6b099fe5ff4f6975776ea630775a02"></script>
    <link href="/Content/bootstrap-table.min.css" rel="stylesheet" />
}
<div style="position: relative; height: 100%;">
    <div class="col-lg-2" style="height: 100%;">
        <div class="panel panel-info" style="min-height: 100%; margin-bottom: 3px; position: relative; display: flex; flex-direction: column;">
            <div class="panel-heading">实时监测</div>
            <div class="panel-body">
                <div>
                    <input class="form-control search-input" placeholder="输入关键字搜索">
                </div>
                <div style="overflow-x: auto;">
                    <ul id="treeNodes" class="ztree"></ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-10" style="height: 100%; overflow-y: hidden;">
        <div class="tabBar" style="overflow-x: hidden;">
            <ul class="nav nav-tabs" role="tablist">
            </ul>
        </div>
        <div class="tab-content">
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/Utility/jquery.ztree.all.min.js"></script>
    <script src="~/Scripts/Utility/jquery.ztree.exhide.min.js"></script>
    <script src="~/Scripts/Utility/chartsOption.js"></script>
    <script src="~/Scripts/Page/monitor.js"></script>
    <script src="/Scripts/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="/Scripts/bootstrap-table/locale/bootstrap-table-zh-CN.min.js"></script>
    <script type="text/javascript">
        var tabSwitch = function (a) {
            $('.tabBar ul>li').removeClass('active');
            $(a).parent('li').addClass('active');
            $('.present').hide();
            $('.present[data-id="' + $(a).attr('data-target') + '"]').show();
        }
        var treeNodes = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(Model.TreeNodes))');
        var tabPopUp = function (event, treeid, treenode) {
            if ($('.tabBar a[data-target=' + treenode.id + ']').length !== 0) {
                var existLi = $('.tabBar a[data-target=' + treenode.id + ']')[0];
                tabSwitch($(existLi));
                return;
            }
            var li = '<li role="presentation"><a data-target="' + treenode.id + '" href="#">' + treenode.name + '</a></li>';
            $('.tabBar ul').append(li);
            $('.tabBar ul>li').removeClass('active');
            var currentli = $($('.tabBar ul>li')[$('.tabBar ul>li').length - 1]);
            currentli.addClass('active');
            var content =
                '<div class="present" data-id="' + treenode.id + '" style="height: 100%; padding: 5px; border: 1px solid #bce8f1;"></div>';
            $('.present').hide();
            $('.tab-content').append(content);
            var prefix = (new Date()).getTime();
            $.get('/Home/MonitorContent',
                {
                    TargetId: treenode.id,
                    TargetName: treenode.name,
                    ViewType: treenode.viewType,
                    PreFix: prefix
                },
                function (ret) {
                    $($('.present')[$('.present').length - 1]).append(ret);
                    $('#gtable_' + treenode.id).attr('data-height', $('#gtable_' + treenode.id).parents('.targetInfo').height() - 28);
                    $('#gtable_' + treenode.id).bootstrapTable();
                    $('#dtable_' + treenode.id).attr('data-height', $('#dtable_' + treenode.id).parents('.panel-info').height() - 18);
                    $('#dtable_' + treenode.id).bootstrapTable();
                    $('#dtable_' + treenode.id).bootstrapTable('refresh',
                    {
                        url: $('#dtable_' + treenode.id).attr('url')
                    });
                    initMap(prefix + treenode.id + 'mapContainer', 10, [121.458911, 31.231119], treenode.id, treenode.viewType);
                    updateMonitorChart(setupChart(prefix + treenode.id + 'chart', treenode.id, treenode.viewType, prefix + treenode.id + 'Selecter'), treenode.id, treenode.viewType, 1, 1, 24);
                    currentli.find('a').click(function () {
                        tabSwitch(currentli.find('a'));
                    });
                });
        }
        var setting = {
            view: {
                selectedMulti: false
            },
            callback: {
                onClick: tabPopUp
            }
        }

        zTreeObj = $.fn.zTree.init($('#treeNodes'), setting, treeNodes);
        $(function () {
            tabPopUp(null, null, { name: '所有数据', viewType: 4, id: '00000000-0000-0000-0000-000000000000' });
        });
        $('.search-input').on('input propertychange', function () {
            hideAllNodes(zTreeObj.getNodes());
            var reg = new RegExp($('.search-input').val());
            var showNodes = regNodes(reg, zTreeObj.getNodes());
            zTreeObj.showNodes(showNodes);
            if ($('.search-input').val().trim().length === 0) {
                zTreeObj.expandAll(false);
            } else {
                zTreeObj.expandAll(true);
            }
        });

        var hideAllNodes = function(nodes) {
            $.each(nodes, function(index, node) {
                if (node.isParent) {
                    hideAllNodes(node.children);
                }
            });

            zTreeObj.hideNodes(nodes);
        }

        var regNodes = function (reg, nodes) {
            var matchedNodes = [];
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].isParent) {
                    var matchChild = regNodes(reg, nodes[i].children);
                    if (matchChild.length > 0 || reg.test(nodes[i].name)) {
                        matchedNodes.push(nodes[i]);
                        matchedNodes = matchedNodes.concat(matchChild);
                    }
                }else if (reg.test(nodes[i].name)) {
                    matchedNodes.push(nodes[i]);
                }
            }

            return matchedNodes;
        }
    </script>
}
