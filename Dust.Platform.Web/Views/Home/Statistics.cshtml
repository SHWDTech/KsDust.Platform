@using Newtonsoft.Json
@using Dust.Platform.Web.Models.Home
@model StatisticsViewModel

@{
    ViewBag.Title = "统计";
}

@section styles{
    <link href="/Content/zTreeStyle.css" rel="stylesheet">
    <link href="/Content/bootstrap-table.min.css" rel="stylesheet" />
    <link href="/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}
<div style="position: relative; height: 100%;">
    <div class="col-lg-2 accroding-menu" style="height: 100%;">
        <div class="panel panel-info accroding-menu-item" style="margin-bottom: 0;">
            <div class="panel-heading">信息管理<span class="glyphicon glyphicon-plus" style="float: right"></span></div>
            <div class="panel-body" style="padding: 0">
                <ul id="infotree" class="ztree"></ul>
            </div>
        </div>
        <div class="panel panel-info accroding-menu-item" style="margin-bottom: 0;">
            <div class="panel-heading">历史查询<span class="glyphicon glyphicon-plus" style="float: right"></span></div>
            <div class="panel-body" style="padding: 0;">
                <ul id="querytree" class="ztree"></ul>
            </div>
        </div>
        <div class="panel panel-info accroding-menu-item" style="margin-bottom: 0;">
            <div class="panel-heading">历史统计<span class="glyphicon glyphicon-plus" style="float: right"></span></div>
            <div class="panel-body" style="padding: 0;">
                <ul id="historytree" class="ztree"></ul>
            </div>
        </div>
    </div>
    <div class="col-lg-10" style="height: 100%; overflow-y: hidden;">
        <div class="tabBar" style="overflow-x: hidden;">
            <ul class="nav nav-tabs" role="tablist"></ul>
        </div>
        <div class="tab-content">
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/Utility/jquery.ztree.all.min.js"></script>
    <script src="/Scripts/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="/Scripts/bootstrap-table/locale/bootstrap-table-zh-CN.min.js"></script>
    <script src="/Scripts/moment-with-locales.min.js"></script>
    <script src="/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/Utility/chartsOption.js"></script>
    <script src="/Scripts/Utility/accrodingmenu.js"></script>
    <script type="text/javascript">
        var treeNodes = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(Model.MenuNodes))');
        var dataType = {
            0: '粉尘(mg/m³)',
            1: 'Pm2.5(mg/m³)',
            2: 'Pm10(mg/m³)',
            3: '噪音(dB)',
            4: '温度(℃)',
            5: '湿度(%)',
            6: '风速(m/s)'
        }
        var tabSwitch = function (a) {
            $('.tabBar ul>li').removeClass('active');
            $(a).parent('li').addClass('active');
            $('.present').hide();
            $('.present[data-id="' + $(a).attr('data-target') + '"]').show();
        }
        var tabPopUp = function (event, treeid, treenode) {
            if ($('.tabBar a[data-target=' + treenode.id + ']').length !== 0) {
                var existLi = $('.tabBar a[data-target=' + treenode.id + ']')[0];
                tabSwitch($(existLi));
                return;
            }
            var li = '<li role="presentation"><a data-target="' + treenode.id + '" href="#">' + treenode.name + '</a></li>';
            $('.tabBar ul').append(li);
            $('.tabBar ul>li').removeClass('active');
            var currentli = $($('.tabBar ul>li')[$('.tabBar ul>li').length - 1]);
            currentli.addClass('active');
            var content =
                '<div class="present" data-id="' + treenode.id + '" style="height: 100%; padding: 5px; border: 1px solid #bce8f1;"></div>';
            $('.present').hide();
            $('.tab-content').append(content);
            $.get(treenode.ajaxurl, treenode.routeValue,
                function (ret) {
                    $($('.present')[$('.present').length - 1]).append(ret);
                    if (treenode.callBack != null) {
                        window[treenode.callBack](treenode.param, function () {
                            currentli.find('a').click(function () {
                                tabSwitch(currentli.find('a'));
                            });
                        }, treenode);
                    }
                });
        }
        var setting = {
            view: {
                selectedMulti: false
            },
            callback: {
                onClick: tabPopUp
            }
        }

        var setupTable = function (par, callback) {
            $('#' + par.table).bootstrapTable();
            $('#' + par.table).bootstrapTable('refresh', {
                url: par.url
            });

            callback();
        }

        var setupRankChart = function (par, callback) {
            $('#' + 'start_' + par.Uuid).datetimepicker({
                locale: 'zh-cn'
            });
            $('#' + 'end_' + par.Uuid).datetimepicker({
                locale: 'zh-cn'
            });
            $('#chart_' + par.Uuid).height($('#chart_' + par.Uuid).parents('.chartContainer').height() - 30);
            var chart = echarts.init(document.getElementById('chart_' + par.Uuid));
            $('#historyRank_' + par.Uuid + ' .query-button').on('click', function () {
                $.post('/Statistics/HistoryRankChart',
                {
                    Type: par.type,
                    DataType: $('#historyRank_' + par.Uuid + ' .dataSelect').val(),
                    DateType: $('#historyRank_' + par.Uuid + ' .dateSelect').val(),
                    Start: $('#' + 'start_' + par.Uuid).data('DateTimePicker').date()._d.toJSON(),
                    End: $('#' + 'end_' + par.Uuid).data('DateTimePicker').date()._d.toJSON()
                }, function (ret) {
                    chart.setOption(chartsOption.barOption({
                        title: "昆山市区县颗粒物小时均值",
                        xAxis: ret.map(function (d) { return d.Name }),
                        yAxisName: dataType[$('#historyRank_' + par.Uuid + ' .dataSelect').val()],
                        series: [{ name: $('#historyRank_' + par.Uuid + ' .dataSelect').find("option:selected").text(), type: 'bar', data: ret.map(function (d) { return d.Avg }) }]
                    }));
                });
            });
            $('#table_' + par.Uuid).bootstrapTable();
            $('#table_' + par.Uuid)
                .bootstrapTable('refresh',
                {
                    url: par.url +
                        '?type=' +
                        par.type +
                        '&dataType=' +
                        $('#historyRank_' + par.Uuid + ' .dataSelect').val() +
                        '&start=' +
                        $('#' + 'start_' + par.Uuid).data('DateTimePicker').date()._d.toJSON() +
                        '&end=' +
                        $('#' + 'end_' + par.Uuid).data('DateTimePicker').date()._d.toJSON() +
                        '&dateType=' +
                        $('#historyRank_' + par.Uuid + ' .dateSelect').val()

        });
            $('#historyRank_' + par.Uuid + ' .query-button').click();
            callback();
        }

        var setupHistoryQuery = function (par, callback, node) {
            var tarId = node.routeValue.TargetId;
            $('#' + 'start_' + tarId).datetimepicker({
                locale: 'zh-cn'
            });
            $('#' + 'end_' + tarId).datetimepicker({
                locale: 'zh-cn'
            });
            $('#chart_' + tarId).height($('#chart_' + tarId).parents('.chartContainer').height() - 30);
            var chart = echarts.init(document.getElementById('chart_' + tarId));
            $('#historyQuery_' + tarId + ' .query-button').on('click', function () {
                $.post('/Statistics/HistoryChart',
                {
                    Id: tarId,
                    Type: node.viewType,
                    DataType: $('#historyQuery_' + tarId + ' .dataSelect').val(),
                    Start: $('#' + 'start_' + tarId).data('DateTimePicker').date()._d.toJSON(),
                    End: $('#' + 'end_' + tarId).data('DateTimePicker').date()._d.toJSON()
                }, function (ret) {
                    chart.setOption(chartsOption.timelineOptions({
                        title: node.name + '-' + dataType[$('#historyQuery_' + tarId + ' .dataSelect').val()],
                        yAxisName: dataType[$('#historyQuery_' + tarId + ' .dataSelect').val()],
                        data: ret
                    }));
                });
            });
            $('#table_' + tarId).bootstrapTable({
                height: $('#table_' + tarId).parents('.panel').parent('div').height() - 50
            });
            $('#table_' + tarId)
                .bootstrapTable('refresh',
                {
                    url: '/Statistics/HistoryQueryTable' +
                        '?type=' +
                        node.viewType +
                        '&id=' +
                        node.id +
                        '&start=' +
                        $('#' + 'start_' + tarId).data('DateTimePicker').date()._d.toJSON() +
                        '&end=' +
                        $('#' + 'end_' + tarId).data('DateTimePicker').date()._d.toJSON()

        });
            $('#historyQuery_' + tarId + ' .query-button').click();

            callback();
        }

        function guid() {
            function s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                  .toString(16)
                  .substring(1);
            }
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
              s4() + '-' + s4() + s4() + s4();
        }

        var disGuid = guid();
        var prjGuid = guid();
        var basicNodes = [
            {
                name: "全市工地查询",
                id: 0,
                ajaxurl: '/Statistics/Projects',
                callBack: 'setupTable',
                param: { table: 'projectTable', url: '/Statistics/GetProjects' }
            },
            {
                name: "各区县信息",
                id: 1,
                ajaxurl: '/Statistics/Districts',
                callBack: 'setupTable',
                param: { table: 'districtTable', url: '/Statistics/GetDistricts' }
            },
            {
                name: "区县颗粒物排名",
                id: 2,
                ajaxurl: '/Statistics/HistoryRank',
                callBack: 'setupRankChart',
                routeValue: { Type: 0, Uuid: disGuid },
                param: {
                    Uuid: disGuid,
                    type: 3,
                    url: '/Statistics/HistoryRankTable'
                }
            },
            {
                name: "工地颗粒物排名",
                id: 3,
                ajaxurl: '/Statistics/HistoryRank',
                callBack: 'setupRankChart',
                routeValue: { Type: 1, Uuid: prjGuid },
                param: {
                    Uuid: prjGuid,
                    type: 1,
                    url: '/Statistics/HistoryRankTable'
                }
            }
        ];
        $.fn.zTree.init($('#infotree'), setting, basicNodes);
        $.fn.zTree.init($('#querytree'), setting, treeNodes);
        $.fn.zTree.init($('#historytree'), setting, treeNodes);
        $('#infotree_1_a').click();
    </script>
}