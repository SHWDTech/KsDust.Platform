@model Dust.Platform.Web.Models.Account.UserEditModel
@{
    Layout = null;
}

<div id="userContent">
    @using (Ajax.BeginForm("UserEdit", "Setting", Model.Id, new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "userContent"
    }, new { @class = "form-group" }))
    {
        <div>
            @Html.HiddenFor(m => m.Id)
            <table class="table table-bordered table-hover table-striped">
                <col style="width:180px">
                <tbody>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.UserName)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </td>
                    </tr>
                    @{
                        if (Guid.Parse(Model.Id) == Guid.Empty)
                        {
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.Password)
                                </td>
                                <td>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.ConfirmPassword)
                                </td>
                                <td>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                </td>
                            </tr>
                        }
                    }
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.UserRole)
                        </td>
                        <td>
                            @Html.DropDownList("UserRole", (List<SelectListItem>)ViewBag.Roles, new { id = "UserRole", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserRole)
                        </td>
                    </tr>
                    <tr style="display: none;" name="ure" id="ure">
                        <td>
                            @Html.LabelFor(m => m.UserRelateEntity)
                        </td>
                        <td>
                            @Html.HiddenFor(m => m.UserRelateEntity, new { id = "ureVal" })
                        <select id="UserRelateEntity" name="UserRelateEntity" class="form-control" style="width: 370px;"></select>
                        @Html.ValidationMessageFor(m => m.UserRelateEntity)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.PhoneNumber)
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber)
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        @Html.ValidationSummary()
                    </td>
                </tr>
                <tr>
                    <td colspan="2" style="direction: rtl;">
                        <input type="submit" value="确认" class="btn btn-success" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
                        }
</div>

<script type="text/javascript">
    $.fn.modal.Constructor.prototype.enforceFocus = function () { };
    var $ureSelect2 = $('#ure').find('select').select2();
    $('#UserRole').on('change', function (e) {
        $.get('/Ajax/RoleEntity', { roleId: e.target.value }, function (ret) {
            if (ret.hasEntitys) {
                $('#ure').show();
                $('#ure').find('label').html(ret.labelContent);
            } else {
                $('#ure').hide();
            }
            $('#ure').find('select').empty();
            $ureSelect2 = $('#ure').find('select').select2({
                data: ret.entities
            });
            if ($('#ureVal').length > 0) {
                $ureSelect2.val($('#ureVal').val()).trigger("change");
                $('#ureVal').remove();
            }
        });
    });
    $('#UserRole').change();
</script>